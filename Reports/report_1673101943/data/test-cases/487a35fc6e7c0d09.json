{
  "uid" : "487a35fc6e7c0d09",
  "name" : "测试导入门店列表.xls接口",
  "fullName" : "testcases.test_all_case.TestALLAPI#test_test_import_the_store_list",
  "historyId" : "d744ce7277dc335fea5129f01b03cf8e",
  "time" : {
    "start" : 1673101943240,
    "stop" : 1673101943247,
    "duration" : 7
  },
  "status" : "broken",
  "statusMessage" : "FileNotFoundError: [Errno 2] No such file or directory: '导入门店模板 (4).xlsx'",
  "statusTrace" : "self = <testcases.test_all_case.TestALLAPI object at 0x00000281444FFD60>\ncaseinfo = {'feature': '店铺模块', 'request': {'files': {'binary': '导入门店模板 (4).xlsx'}, 'headers': {'Authorization': 'Bearer ${read_ya...'post', 'url': '/micro/ent/storeManagement/batchImportStore'}, 'story': '导入门店列表.xls接口', 'title': '测试导入门店列表.xls接口', ...}\nbase_url = 'http://wanjidev.wandianzhang.com'\n\n    @pytest.mark.parametrize(\"caseinfo\", read_testcase(yaml_path))\n    # @pytest.mark.run(order=1)\n    def test_func(self, caseinfo, base_url):\n        allure.dynamic.feature(caseinfo['feature'])\n        allure.dynamic.story(caseinfo['story'])\n        allure.dynamic.title(caseinfo['title'])\n>       RequestUtil().standard_yaml_case(caseinfo, base_url)\n\ntestcases\\test_all_case.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <commons.request_util.RequestUtil object at 0x00000281447778B0>\ncaseinfo = {'feature': '店铺模块', 'request': {'files': {'binary': '导入门店模板 (4).xlsx'}, 'headers': {'Authorization': 'Bearer eyJhbGciO...wandianzhang.com/micro/ent/storeManagement/batchImportStore'}, 'story': '导入门店列表.xls接口', 'title': '测试导入门店列表.xls接口', ...}\nbase_url = 'http://wanjidev.wandianzhang.com'\n\n    def standard_yaml_case(self, caseinfo, base_url):\n        # case_keys = yaml.dump(case_keys)  # 把字典转化成字符串\n        logger.info(\"----------测试用例请求开始----------\")\n        # 在请求之前调用热加载，通过反射使得yaml文件能够调用python里面的函数\n        # 字典转换成字符串\n        yaml_str = yaml.dump(caseinfo)\n        yaml_str = self.replace_hotload(yaml_str)\n        caseinfo = yaml.safe_load(StringIO(yaml_str))\n        # 标准化\n        case_keys = caseinfo.keys()\n        # print(case_keys)\n        # 如果后者超级是{'title','request','validate'}的超级是set（set_keys）返回是ture\n        if set(case_keys).issuperset({'feature', 'title', 'request', 'validate'}):\n            request_keys = caseinfo['request'].keys()\n            if set(request_keys).issuperset({'method', 'url'}):\n                # print('用例格式正确')\n                # 处理url\n                caseinfo['request']['url'] = base_url + caseinfo['request']['url']\n                # 加入日志\n                logger.info(\"用例标题：%s\" % caseinfo['title'])\n                logger.info(\"用例方式：%s\" % caseinfo['request']['method'])\n                logger.info(\"用例路径：%s\" % caseinfo['request']['url'])\n                if set(request_keys).issuperset({\"headers\"}):\n                    logger.info(\"请求头部: %s\" % caseinfo[\"request\"][\"headers\"])\n                # 处理files\n                for key, value in caseinfo['request'].items():\n                    if key == \"params\":\n                        logger.info(\"用例params参数：%s\" % caseinfo['request']['params'])\n                    elif key == \"data\":\n                        logger.info(\"用例data参数：%s\" % caseinfo['request']['data'])\n                    elif key == \"json\":\n                        logger.info(\"用例json参数：%s\" % caseinfo['request']['json'])\n                    # print(key, value)\n                    if key == \"files\":\n                        logger.info(\"用例files参数：%s\" % caseinfo['request']['files'])\n                        for file_key, file_value in dict(value).items():\n                            print(file_key, file_value)\n>                           value[file_key] = open(file_value, \"rb\")\nE                           FileNotFoundError: [Errno 2] No such file or directory: '导入门店模板 (4).xlsx'\n\ncommons\\request_util.py:60: FileNotFoundError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "clear_extract_yaml",
    "time" : {
      "start" : 1673101942775,
      "stop" : 1673101942775,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1673101942775,
      "stop" : 1673101942775,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1673101942775,
      "stop" : 1673101942775,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "FileNotFoundError: [Errno 2] No such file or directory: '导入门店模板 (4).xlsx'",
    "statusTrace" : "self = <testcases.test_all_case.TestALLAPI object at 0x00000281444FFD60>\ncaseinfo = {'feature': '店铺模块', 'request': {'files': {'binary': '导入门店模板 (4).xlsx'}, 'headers': {'Authorization': 'Bearer ${read_ya...'post', 'url': '/micro/ent/storeManagement/batchImportStore'}, 'story': '导入门店列表.xls接口', 'title': '测试导入门店列表.xls接口', ...}\nbase_url = 'http://wanjidev.wandianzhang.com'\n\n    @pytest.mark.parametrize(\"caseinfo\", read_testcase(yaml_path))\n    # @pytest.mark.run(order=1)\n    def test_func(self, caseinfo, base_url):\n        allure.dynamic.feature(caseinfo['feature'])\n        allure.dynamic.story(caseinfo['story'])\n        allure.dynamic.title(caseinfo['title'])\n>       RequestUtil().standard_yaml_case(caseinfo, base_url)\n\ntestcases\\test_all_case.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <commons.request_util.RequestUtil object at 0x00000281447778B0>\ncaseinfo = {'feature': '店铺模块', 'request': {'files': {'binary': '导入门店模板 (4).xlsx'}, 'headers': {'Authorization': 'Bearer eyJhbGciO...wandianzhang.com/micro/ent/storeManagement/batchImportStore'}, 'story': '导入门店列表.xls接口', 'title': '测试导入门店列表.xls接口', ...}\nbase_url = 'http://wanjidev.wandianzhang.com'\n\n    def standard_yaml_case(self, caseinfo, base_url):\n        # case_keys = yaml.dump(case_keys)  # 把字典转化成字符串\n        logger.info(\"----------测试用例请求开始----------\")\n        # 在请求之前调用热加载，通过反射使得yaml文件能够调用python里面的函数\n        # 字典转换成字符串\n        yaml_str = yaml.dump(caseinfo)\n        yaml_str = self.replace_hotload(yaml_str)\n        caseinfo = yaml.safe_load(StringIO(yaml_str))\n        # 标准化\n        case_keys = caseinfo.keys()\n        # print(case_keys)\n        # 如果后者超级是{'title','request','validate'}的超级是set（set_keys）返回是ture\n        if set(case_keys).issuperset({'feature', 'title', 'request', 'validate'}):\n            request_keys = caseinfo['request'].keys()\n            if set(request_keys).issuperset({'method', 'url'}):\n                # print('用例格式正确')\n                # 处理url\n                caseinfo['request']['url'] = base_url + caseinfo['request']['url']\n                # 加入日志\n                logger.info(\"用例标题：%s\" % caseinfo['title'])\n                logger.info(\"用例方式：%s\" % caseinfo['request']['method'])\n                logger.info(\"用例路径：%s\" % caseinfo['request']['url'])\n                if set(request_keys).issuperset({\"headers\"}):\n                    logger.info(\"请求头部: %s\" % caseinfo[\"request\"][\"headers\"])\n                # 处理files\n                for key, value in caseinfo['request'].items():\n                    if key == \"params\":\n                        logger.info(\"用例params参数：%s\" % caseinfo['request']['params'])\n                    elif key == \"data\":\n                        logger.info(\"用例data参数：%s\" % caseinfo['request']['data'])\n                    elif key == \"json\":\n                        logger.info(\"用例json参数：%s\" % caseinfo['request']['json'])\n                    # print(key, value)\n                    if key == \"files\":\n                        logger.info(\"用例files参数：%s\" % caseinfo['request']['files'])\n                        for file_key, file_value in dict(value).items():\n                            print(file_key, file_value)\n>                           value[file_key] = open(file_value, \"rb\")\nE                           FileNotFoundError: [Errno 2] No such file or directory: '导入门店模板 (4).xlsx'\n\ncommons\\request_util.py:60: FileNotFoundError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f7d278d27dd91cc4",
      "name" : "log",
      "source" : "f7d278d27dd91cc4.txt",
      "type" : "text/plain",
      "size" : 3216
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "店铺模块"
  }, {
    "name" : "story",
    "value" : "导入门店列表.xls接口"
  }, {
    "name" : "epic",
    "value" : "项目名称：万集接口自动化测试"
  }, {
    "name" : "parentSuite",
    "value" : "testcases"
  }, {
    "name" : "suite",
    "value" : "test_all_case"
  }, {
    "name" : "subSuite",
    "value" : "TestALLAPI"
  }, {
    "name" : "host",
    "value" : "DESKTOP-5ALEO36"
  }, {
    "name" : "thread",
    "value" : "13628-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.test_all_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "487a35fc6e7c0d09.json",
  "parameterValues" : [ ]
}